{"ast":null,"code":"var _jsxFileName = \"/home/akshit/Workspace/DEV/Web Dev/echocode.ai/frontend/src/components/VoiceRecorderButton.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useCallback } from 'react';\nimport { FiMic, FiLoader } from 'react-icons/fi';\n\n// Helper function to encode PCM data to a WAV file\n// This is the core of the fix\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction encodeWAV(samples, sampleRate) {\n  const buffer = new ArrayBuffer(44 + samples.length * 2);\n  const view = new DataView(buffer);\n\n  /* RIFF identifier */\n  writeString(view, 0, 'RIFF');\n  /* file length */\n  view.setUint32(4, 36 + samples.length * 2, true);\n  /* RIFF type */\n  writeString(view, 8, 'WAVE');\n  /* format chunk identifier */\n  writeString(view, 12, 'fmt ');\n  /* format chunk length */\n  view.setUint32(16, 16, true);\n  /* sample format (raw) */\n  view.setUint16(20, 1, true);\n  /* channel count */\n  view.setUint16(22, 1, true); // Mono\n  /* sample rate */\n  view.setUint32(24, sampleRate, true);\n  /* byte rate (sample rate * block align) */\n  view.setUint32(28, sampleRate * 2, true);\n  /* block align (channel count * bytes per sample) */\n  view.setUint16(32, 2, true);\n  /* bits per sample */\n  view.setUint16(34, 16, true);\n  /* data chunk identifier */\n  writeString(view, 36, 'data');\n  /* data chunk length */\n  view.setUint32(40, samples.length * 2, true);\n  floatTo16BitPCM(view, 44, samples);\n  return new Blob([view], {\n    type: 'audio/wav'\n  });\n}\nfunction writeString(view, offset, string) {\n  for (let i = 0; i < string.length; i++) {\n    view.setUint8(offset + i, string.charCodeAt(i));\n  }\n}\nfunction floatTo16BitPCM(output, offset, input) {\n  for (let i = 0; i < input.length; i++, offset += 2) {\n    const s = Math.max(-1, Math.min(1, input[i]));\n    output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n  }\n}\nfunction VoiceRecorderButton({\n  onVoiceInput,\n  loading,\n  floating\n}) {\n  _s();\n  const [recording, setRecording] = useState(false);\n\n  // Refs for Web Audio API\n  const audioContextRef = useRef(null);\n  const streamRef = useRef(null);\n  const processorRef = useRef(null);\n  const pcmDataRef = useRef([]);\n  const sampleRateRef = useRef(null);\n  const startRecording = useCallback(async () => {\n    try {\n      setRecording(true);\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      streamRef.current = stream;\n      const context = new (window.AudioContext || window.webkitAudioContext)();\n      audioContextRef.current = context;\n      sampleRateRef.current = context.sampleRate;\n      const source = context.createMediaStreamSource(stream);\n      const processor = context.createScriptProcessor(4096, 1, 1); // bufferSize, inputChannels, outputChannels\n      processorRef.current = processor;\n      pcmDataRef.current = [];\n      processor.onaudioprocess = e => {\n        // Get the raw PCM data\n        const inputData = e.inputBuffer.getChannelData(0);\n        const dataArray = new Float32Array(inputData);\n        pcmDataRef.current.push(...dataArray);\n      };\n      source.connect(processor);\n      processor.connect(context.destination);\n    } catch (err) {\n      console.error(\"Error starting recording:\", err);\n      setRecording(false);\n    }\n  }, []);\n  const stopRecording = useCallback(() => {\n    setRecording(false);\n    if (processorRef.current) {\n      processorRef.current.disconnect();\n      processorRef.current = null;\n    }\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop());\n      streamRef.current = null;\n    }\n    if (audioContextRef.current) {\n      audioContextRef.current.close().then(() => {\n        audioContextRef.current = null;\n        if (pcmDataRef.current.length > 0 && sampleRateRef.current) {\n          const audioBlob = encodeWAV(pcmDataRef.current, sampleRateRef.current);\n          onVoiceInput(audioBlob);\n          pcmDataRef.current = [];\n        }\n      });\n    }\n  }, [onVoiceInput]);\n\n  // Animated waves (simple SVG)\n  const waves = /*#__PURE__*/_jsxDEV(\"svg\", {\n    className: \"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 z-0\",\n    width: \"80\",\n    height: \"80\",\n    viewBox: \"0 0 80 80\",\n    children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: \"40\",\n      cy: \"40\",\n      r: \"30\",\n      fill: \"none\",\n      stroke: \"#3b82f6\",\n      strokeWidth: \"2\",\n      opacity: \"0.3\",\n      children: /*#__PURE__*/_jsxDEV(\"animate\", {\n        attributeName: \"r\",\n        values: \"30;38;30\",\n        dur: \"1.2s\",\n        repeatCount: \"indefinite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: \"40\",\n      cy: \"40\",\n      r: \"38\",\n      fill: \"none\",\n      stroke: \"#3b82f6\",\n      strokeWidth: \"2\",\n      opacity: \"0.15\",\n      children: /*#__PURE__*/_jsxDEV(\"animate\", {\n        attributeName: \"r\",\n        values: \"38;46;38\",\n        dur: \"1.2s\",\n        repeatCount: \"indefinite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n  if (floating) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative flex items-center justify-center\",\n      children: [recording && waves, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `bg-blue-600 hover:bg-blue-700 text-white rounded-full shadow-2xl flex items-center justify-center w-20 h-20 text-4xl border-4 border-blue-400 transition-all duration-200 ${loading ? 'opacity-50 cursor-not-allowed' : ''} ${recording ? 'animate-pulse shadow-blue-400' : ''}`,\n        onClick: recording ? stopRecording : startRecording,\n        disabled: loading,\n        \"aria-label\": recording ? 'Stop Recording' : 'Start Recording',\n        style: {\n          boxShadow: recording ? '0 0 32px 8px #3b82f6' : '0 8px 32px rgba(0,0,0,0.3)'\n        },\n        children: loading ? /*#__PURE__*/_jsxDEV(FiLoader, {\n          className: \"animate-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(FiMic, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 62\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `bg-blue-500 text-white px-4 py-2 rounded shadow flex items-center ${loading ? 'opacity-50' : ''}`,\n    onClick: recording ? stopRecording : startRecording,\n    disabled: loading,\n    children: recording ? 'ðŸ›‘ Stop' : 'ðŸŽ¤ Record'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n_s(VoiceRecorderButton, \"6h7zUMi0WcvY/kbNVS/fIJ/CZcY=\");\n_c = VoiceRecorderButton;\nexport default VoiceRecorderButton;\nvar _c;\n$RefreshReg$(_c, \"VoiceRecorderButton\");","map":{"version":3,"names":["React","useRef","useState","useCallback","FiMic","FiLoader","jsxDEV","_jsxDEV","encodeWAV","samples","sampleRate","buffer","ArrayBuffer","length","view","DataView","writeString","setUint32","setUint16","floatTo16BitPCM","Blob","type","offset","string","i","setUint8","charCodeAt","output","input","s","Math","max","min","setInt16","VoiceRecorderButton","onVoiceInput","loading","floating","_s","recording","setRecording","audioContextRef","streamRef","processorRef","pcmDataRef","sampleRateRef","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","context","window","AudioContext","webkitAudioContext","source","createMediaStreamSource","processor","createScriptProcessor","onaudioprocess","e","inputData","inputBuffer","getChannelData","dataArray","Float32Array","push","connect","destination","err","console","error","stopRecording","disconnect","getTracks","forEach","track","stop","close","then","audioBlob","waves","className","width","height","viewBox","children","cx","cy","r","fill","stroke","strokeWidth","opacity","attributeName","values","dur","repeatCount","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","style","boxShadow","_c","$RefreshReg$"],"sources":["/home/akshit/Workspace/DEV/Web Dev/echocode.ai/frontend/src/components/VoiceRecorderButton.js"],"sourcesContent":["import React, { useRef, useState, useCallback } from 'react';\nimport { FiMic, FiLoader } from 'react-icons/fi';\n\n// Helper function to encode PCM data to a WAV file\n// This is the core of the fix\nfunction encodeWAV(samples, sampleRate) {\n  const buffer = new ArrayBuffer(44 + samples.length * 2);\n  const view = new DataView(buffer);\n\n  /* RIFF identifier */\n  writeString(view, 0, 'RIFF');\n  /* file length */\n  view.setUint32(4, 36 + samples.length * 2, true);\n  /* RIFF type */\n  writeString(view, 8, 'WAVE');\n  /* format chunk identifier */\n  writeString(view, 12, 'fmt ');\n  /* format chunk length */\n  view.setUint32(16, 16, true);\n  /* sample format (raw) */\n  view.setUint16(20, 1, true);\n  /* channel count */\n  view.setUint16(22, 1, true); // Mono\n  /* sample rate */\n  view.setUint32(24, sampleRate, true);\n  /* byte rate (sample rate * block align) */\n  view.setUint32(28, sampleRate * 2, true);\n  /* block align (channel count * bytes per sample) */\n  view.setUint16(32, 2, true);\n  /* bits per sample */\n  view.setUint16(34, 16, true);\n  /* data chunk identifier */\n  writeString(view, 36, 'data');\n  /* data chunk length */\n  view.setUint32(40, samples.length * 2, true);\n\n  floatTo16BitPCM(view, 44, samples);\n\n  return new Blob([view], { type: 'audio/wav' });\n}\n\nfunction writeString(view, offset, string) {\n  for (let i = 0; i < string.length; i++) {\n    view.setUint8(offset + i, string.charCodeAt(i));\n  }\n}\n\nfunction floatTo16BitPCM(output, offset, input) {\n  for (let i = 0; i < input.length; i++, offset += 2) {\n    const s = Math.max(-1, Math.min(1, input[i]));\n    output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n  }\n}\n\n\nfunction VoiceRecorderButton({ onVoiceInput, loading, floating }) {\n  const [recording, setRecording] = useState(false);\n  \n  // Refs for Web Audio API\n  const audioContextRef = useRef(null);\n  const streamRef = useRef(null);\n  const processorRef = useRef(null);\n  const pcmDataRef = useRef([]);\n  const sampleRateRef = useRef(null);\n\n  const startRecording = useCallback(async () => {\n    try {\n      setRecording(true);\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      streamRef.current = stream;\n\n      const context = new (window.AudioContext || window.webkitAudioContext)();\n      audioContextRef.current = context;\n      sampleRateRef.current = context.sampleRate;\n      \n      const source = context.createMediaStreamSource(stream);\n      const processor = context.createScriptProcessor(4096, 1, 1); // bufferSize, inputChannels, outputChannels\n      processorRef.current = processor;\n\n      pcmDataRef.current = [];\n\n      processor.onaudioprocess = (e) => {\n        // Get the raw PCM data\n        const inputData = e.inputBuffer.getChannelData(0);\n        const dataArray = new Float32Array(inputData);\n        pcmDataRef.current.push(...dataArray);\n      };\n\n      source.connect(processor);\n      processor.connect(context.destination);\n\n    } catch (err) {\n      console.error(\"Error starting recording:\", err);\n      setRecording(false);\n    }\n  }, []);\n\n  const stopRecording = useCallback(() => {\n    setRecording(false);\n\n    if (processorRef.current) {\n      processorRef.current.disconnect();\n      processorRef.current = null;\n    }\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop());\n      streamRef.current = null;\n    }\n    if (audioContextRef.current) {\n        audioContextRef.current.close().then(() => {\n            audioContextRef.current = null;\n            if (pcmDataRef.current.length > 0 && sampleRateRef.current) {\n                const audioBlob = encodeWAV(pcmDataRef.current, sampleRateRef.current);\n                onVoiceInput(audioBlob);\n                pcmDataRef.current = [];\n            }\n        });\n    }\n  }, [onVoiceInput]);\n\n  // Animated waves (simple SVG)\n  const waves = (\n    <svg className=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 z-0\" width=\"80\" height=\"80\" viewBox=\"0 0 80 80\">\n      <circle cx=\"40\" cy=\"40\" r=\"30\" fill=\"none\" stroke=\"#3b82f6\" strokeWidth=\"2\" opacity=\"0.3\">\n        <animate attributeName=\"r\" values=\"30;38;30\" dur=\"1.2s\" repeatCount=\"indefinite\" />\n      </circle>\n      <circle cx=\"40\" cy=\"40\" r=\"38\" fill=\"none\" stroke=\"#3b82f6\" strokeWidth=\"2\" opacity=\"0.15\">\n        <animate attributeName=\"r\" values=\"38;46;38\" dur=\"1.2s\" repeatCount=\"indefinite\" />\n      </circle>\n    </svg>\n  );\n\n  if (floating) {\n    return (\n      <div className=\"relative flex items-center justify-center\">\n        {recording && waves}\n        <button\n          className={`bg-blue-600 hover:bg-blue-700 text-white rounded-full shadow-2xl flex items-center justify-center w-20 h-20 text-4xl border-4 border-blue-400 transition-all duration-200 ${loading ? 'opacity-50 cursor-not-allowed' : ''} ${recording ? 'animate-pulse shadow-blue-400' : ''}`}\n          onClick={recording ? stopRecording : startRecording}\n          disabled={loading}\n          aria-label={recording ? 'Stop Recording' : 'Start Recording'}\n          style={{ boxShadow: recording ? '0 0 32px 8px #3b82f6' : '0 8px 32px rgba(0,0,0,0.3)' }}\n        >\n          {loading ? <FiLoader className=\"animate-spin\" /> : <FiMic />}\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <button\n      className={`bg-blue-500 text-white px-4 py-2 rounded shadow flex items-center ${loading ? 'opacity-50' : ''}`}\n      onClick={recording ? stopRecording : startRecording}\n      disabled={loading}\n    >\n      {recording ? 'ðŸ›‘ Stop' : 'ðŸŽ¤ Record'}\n    </button>\n  );\n}\n\nexport default VoiceRecorderButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}