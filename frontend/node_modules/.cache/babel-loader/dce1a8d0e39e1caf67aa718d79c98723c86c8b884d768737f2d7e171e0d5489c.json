{"ast":null,"code":"var _jsxFileName = \"/home/akshit/Workspace/DEV/Web Dev/echocode.ai/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport VoiceRecorderButton from './components/VoiceRecorderButton';\nimport QueryDisplay from './components/QueryDisplay';\nimport ResultDisplay from './components/ResultDisplay';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleVoiceInput = async audioBlob => {\n    setLoading(true);\n    setError('');\n    try {\n      // Send audio to backend /stt\n      const sttRes = await fetch('/api/stt', {\n        method: 'POST',\n        body: audioBlob\n      });\n      const sttData = await sttRes.json();\n      setQuery(sttData.text);\n      // Send text to backend /generate\n      const genRes = await fetch('/api/generate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: sttData.text\n        })\n      });\n      const genData = await genRes.json();\n      setResult(genData);\n    } catch (err) {\n      setError('Error processing your request.');\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 flex flex-col items-center p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Voice-Based Programming Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VoiceRecorderButton, {\n      onVoiceInput: handleVoiceInput,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QueryDisplay, {\n      query: query\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500 mt-2\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), result && /*#__PURE__*/_jsxDEV(ResultDisplay, {\n      explanation: result.explanation,\n      code: result.code,\n      language: result.language\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ixxmd1J7Jpi5HUcvhrTBVw0zAKQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","VoiceRecorderButton","QueryDisplay","ResultDisplay","jsxDEV","_jsxDEV","App","_s","query","setQuery","result","setResult","loading","setLoading","error","setError","handleVoiceInput","audioBlob","sttRes","fetch","method","body","sttData","json","text","genRes","headers","JSON","stringify","genData","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onVoiceInput","explanation","code","language","_c","$RefreshReg$"],"sources":["/home/akshit/Workspace/DEV/Web Dev/echocode.ai/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport VoiceRecorderButton from './components/VoiceRecorderButton';\nimport QueryDisplay from './components/QueryDisplay';\nimport ResultDisplay from './components/ResultDisplay';\nimport './App.css';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleVoiceInput = async (audioBlob) => {\n    setLoading(true);\n    setError('');\n    try {\n      // Send audio to backend /stt\n      const sttRes = await fetch('/api/stt', {\n        method: 'POST',\n        body: audioBlob\n      });\n      const sttData = await sttRes.json();\n      setQuery(sttData.text);\n      // Send text to backend /generate\n      const genRes = await fetch('/api/generate', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ query: sttData.text })\n      });\n      const genData = await genRes.json();\n      setResult(genData);\n    } catch (err) {\n      setError('Error processing your request.');\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col items-center p-4\">\n      <h1 className=\"text-2xl font-bold mb-4\">Voice-Based Programming Assistant</h1>\n      <VoiceRecorderButton onVoiceInput={handleVoiceInput} loading={loading} />\n      <QueryDisplay query={query} />\n      {error && <div className=\"text-red-500 mt-2\">{error}</div>}\n      {result && <ResultDisplay explanation={result.explanation} code={result.code} language={result.language} />}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}